{"ast":null,"code":"import _classCallCheck from \"C:/Users/lokorasli/Documents/GitHub/kadathar.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/lokorasli/Documents/GitHub/kadathar.github.io/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Hex } from \"./models/Hex\";\nimport { Point } from \"./models/Point\";\nexport var HexUtils = /*#__PURE__*/function () {\n  function HexUtils() {\n    _classCallCheck(this, HexUtils);\n  }\n  _createClass(HexUtils, null, [{\n    key: \"equals\",\n    value: /** Checks if coordinates are the same.*/\n    function equals(a, b) {\n      return a.q == b.q && a.r == b.r && a.s == b.s;\n    }\n    /** Returns a new Hex with the addition of q,r,s values from A and B respectively */\n  }, {\n    key: \"add\",\n    value: function add(a, b) {\n      return new Hex(a.q + b.q, a.r + b.r, a.s + b.s);\n    }\n    /** Returns a new Hex with the subtraction of q,r,s values from A and B respectively */\n  }, {\n    key: \"subtract\",\n    value: function subtract(a, b) {\n      return new Hex(a.q - b.q, a.r - b.r, a.s - b.s);\n    }\n    /** Returns a new Hex with the multiplication of q,r,s values by k */\n  }, {\n    key: \"multiply\",\n    value: function multiply(a, k) {\n      return new Hex(a.q * k, a.r * k, a.s * k);\n    }\n    /** Returns length from origin point 0,0 */\n  }, {\n    key: \"lengths\",\n    value: function lengths(hex) {\n      return (Math.abs(hex.q) + Math.abs(hex.r) + Math.abs(hex.s)) / 2;\n    }\n    /** Returns the distance between two hex coordinates */\n  }, {\n    key: \"distance\",\n    value: function distance(a, b) {\n      return HexUtils.lengths(HexUtils.subtract(a, b));\n    }\n    /** Returns a new Hex in the \"direction\", which has modulus six, \"% 6\", applied to it,\n     * and thus computes to a number between 0 through 5. */\n  }, {\n    key: \"direction\",\n    value: function direction(_direction) {\n      return HexUtils.DIRECTIONS[(6 + _direction % 6) % 6];\n    }\n    /** Returns the addition of the current Hex and a new Hex in the\n     * specified \"direction\". Direction has modulus six, \"% 6\", applied to it,\n     * and thus computes to a number between 0 through 5.\n     */\n  }, {\n    key: \"neighbor\",\n    value: function neighbor(hex, direction) {\n      return HexUtils.add(hex, HexUtils.direction(direction));\n    }\n    /** Returns an array of all the direct neighbors of a Hex within one Hex away */\n  }, {\n    key: \"neighbors\",\n    value: function neighbors(hex) {\n      var array = [];\n      for (var i = 0; i < HexUtils.DIRECTIONS.length; i += 1) {\n        array.push(HexUtils.neighbor(hex, i));\n      }\n      return array;\n    }\n    /** I'm not sure what this does */\n  }, {\n    key: \"round\",\n    value: function round(hex) {\n      var rq = Math.round(hex.q);\n      var rr = Math.round(hex.r);\n      var rs = Math.round(hex.s);\n      var qDiff = Math.abs(rq - hex.q);\n      var rDiff = Math.abs(rr - hex.r);\n      var sDiff = Math.abs(rs - hex.s);\n      if (qDiff > rDiff && qDiff > sDiff) rq = -rr - rs;else if (rDiff > sDiff) rr = -rq - rs;else rs = -rq - rr;\n      return new Hex(rq, rr, rs);\n    }\n    /** Given the q,r,s of a hexagon return the x and y pixel coordinates of the\n     * hexagon center. */\n  }, {\n    key: \"hexToPixel\",\n    value: function hexToPixel(hex, layout) {\n      var s = layout.spacing;\n      var M = layout.orientation;\n      var x = (M.f0 * hex.q + M.f1 * hex.r) * layout.size.x;\n      var y = (M.f2 * hex.q + M.f3 * hex.r) * layout.size.y;\n      // Apply spacing\n      x = x * s;\n      y = y * s;\n      return new Point(x + layout.origin.x, y + layout.origin.y);\n    }\n    /** Return the q,r,s coordinate of the hexagon given pixel point x and y. */\n  }, {\n    key: \"pixelToHex\",\n    value: function pixelToHex(point, layout) {\n      var M = layout.orientation;\n      var pt = new Point((point.x - layout.origin.x) / layout.size.x, (point.y - layout.origin.y) / layout.size.y);\n      var q = M.b0 * pt.x + M.b1 * pt.y;\n      var r = M.b2 * pt.x + M.b3 * pt.y;\n      var hex = new Hex(q, r, -q - r);\n      return HexUtils.round(hex);\n    }\n    /** Apply Linear Interpolation between two known points\n     * See:\n     * https://en.wikipedia.org/wiki/Linear_interpolation\n     */\n  }, {\n    key: \"lerp\",\n    value: function lerp(a, b, t) {\n      return a + (b - a) * t;\n    }\n    /** Apply Linear Interpolation between two known Hexes\n     * See:\n     * https://en.wikipedia.org/wiki/Linear_interpolation\n     */\n  }, {\n    key: \"hexLerp\",\n    value: function hexLerp(a, b, t) {\n      return new Hex(HexUtils.lerp(a.q, b.q, t), HexUtils.lerp(a.r, b.r, t), HexUtils.lerp(a.s, b.s, t));\n    }\n    /** Return a string ID from Hex Coordinates.\n     * Example: Hex Coordinates of {q: 1, r: 2, s: 3} is returned\n     * as string \"1,2,3\"\n     */\n  }, {\n    key: \"getID\",\n    value: function getID(hex) {\n      return \"\".concat(hex.q, \",\").concat(hex.r, \",\").concat(hex.s);\n    }\n  }]);\n  return HexUtils;\n}();\nHexUtils.DIRECTIONS = [new Hex(1, 0, -1), new Hex(1, -1, 0), new Hex(0, -1, 1), new Hex(-1, 0, 1), new Hex(-1, 1, 0), new Hex(0, 1, -1)];\nexport default HexUtils;","map":{"version":3,"names":["Hex","Point","HexUtils","_classCallCheck","_createClass","key","value","equals","a","b","q","r","s","add","subtract","multiply","k","lengths","hex","Math","abs","distance","direction","DIRECTIONS","neighbor","neighbors","array","i","length","push","round","rq","rr","rs","qDiff","rDiff","sDiff","hexToPixel","layout","spacing","M","orientation","x","f0","f1","size","y","f2","f3","origin","pixelToHex","point","pt","b0","b1","b2","b3","lerp","t","hexLerp","getID","concat"],"sources":["../src/HexUtils.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}